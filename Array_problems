public class Main {
    public static void main(String[] args) {
        int[] arr = {1, 3, 6, 8, 2, 4, 7};
        int n = arr.length;

        // Second Largest Element
        /*
        int l = arr[0];
        int sl = -1;
        for (int i = 1; i < arr.length - 1; i++) {
            if (l < arr[i]) {
                l = arr[i];
                sl = l;
            } else if (l > arr[i] && l > sl) {
                sl = arr[i];
            }
        }
        System.out.println(sl);
        */

        // Check if Sorted
        /*
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] >= arr[i - 1]) {
                System.out.println("true");
            } else {
                System.out.println("false");
            }
        }
        System.out.println("true");
        */

        // Remove Duplicates and Print Length
        /*
        int i = 0;
        for (int j = 1; j < arr.length - 1; j++) {
            if (arr[i] != arr[j]) {
                arr[i + 1] = arr[j];
                i++;
            }
        }
        System.out.println(i + 1);
        */

        // Left Rotate the Array by One Place
        /*
        int temp = arr[0];
        for (int i = 1; i < n; i++) {
            arr[i - 1] = arr[i];
        }
        arr[n - 1] = temp;
        for (int k = 0; k < n; k++) {
            System.out.println(arr[k]);
        }
        */

        // Left Rotate the Array by d Places
        /*
        int[] temp = {1, 5};
        int d = 2;
        for (int i = d; i < n; i++) {
            arr[i - d] = arr[i];
        }
        for (int i = n - d; i < n; i++) {
            arr[i] = temp[i - (n - d)];
        }
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
        */

        // Move All Zeros to End of the Array (Brute Force)
        /*
        int[] temp = new int[7];
        for (int i = 0; i < n; i++) {
            if (arr[i] != 0) {
                temp[i] = arr[i];
            }
        }
        for (int i = 0; i < temp.length; i++) {
            arr[i] = temp[i];
        }
        for (int i = temp.length; i < n; i++) {
            arr[i] = 0;
        }
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
        */

        // Move All Zeros to End (Optimal)
        /*
        int j = -1;
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == 0) {
                j = i;
                break;
            }
        }
        for (int i = j + 1; i < n; i++) {
            if (arr[i] != 0) {
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
                j++;
            }
        }
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
        */

        // Remove Even Integers from Array
        /*
        int odd = 0;
        for (int i = 0; i < arr.length; i++) {
            if ((arr[i] % 2) != 0) {
                odd++;
            }
        }
        int[] a = new int[odd];
        int idx = 0;
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] % 2 != 0) {
                a[idx] = arr[i];
                idx++;
            }
        }
        for (int i = 0; i < a.length; i++) {
            System.out.println(a[i] + " ");
        }
        */

        // Find Missing Element in Array
        /*
        int l = arr.length + 1;
        int sum = l * (l + 1) / 2;
        for (int num : arr) {
            sum = sum - num;
        }
        System.out.println(sum);
        */

        // Resizing the Array
        /*
        System.out.println(arr.length);
        int capacity = 10;
        int[] temp = new int[capacity];
        for (int i = 0; i < n; i++) {
            temp[i] = arr[i];
        }
        arr = temp;
        System.out.println(arr.length);
        */

        // Minimum Value in Array
        /*
        int min = arr[0];
        for (int i = 0; i < n; i++) {
            if (arr[i] < min) {
                min = arr[i];
            }
        }
        System.out.println(min);
        */

        // Reverse an Array
        /*
        int i = 0;
        int j = n - 1;
        while (i < j) {
            int temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
            i++;
            j--;
        }
        for (i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
        */
    }

    // Reverse Function for Rotations (uncomment to use)
    /*
    public static void reverse(int[] arr, int start, int end) {
        while (start <= end) {
            int temp = arr[start];
            arr[start] = arr[end];
            arr[end] = temp;
            start++;
            end--;
        }
        for (int i = 0; i < arr.length; i++) {
            System.out.print(arr[i] + " ");
        }
    }
    */
}
